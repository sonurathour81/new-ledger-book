{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-hoolime1/Desktop/sonu 22-01-2020/React Redux Projects without npm/ledger_book/src/component/signup/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Field, formInputData, formValidation } from 'reactjs-input-validator';\nimport * as styl from '../../style';\nimport './style.css';\nimport * as fun from '../../redux/actions/index';\nimport Login from '../login';\n\nconst SignUp = props => {\n  const [signUpState, setSignUpState] = useState({});\n  const [shouldValidateInputs, setShouldValidateInputs] = useState('');\n\n  const fieldHandle = (event, inputValue, inputName, validationState, isRequired) => {\n    const value = event && event.target.value || inputValue;\n    signUpState[inputName] = {\n      value,\n      validation: validationState,\n      isRequired\n    };\n    setSignUpState({ ...signUpState\n    });\n  };\n\n  const [dobDate, setDobDate] = useState('');\n\n  const DobFun = date => {\n    setDobDate(date);\n  };\n\n  useEffect(() => {\n    dispatch(fun.displayDataInitial());\n  }, []);\n  const mapState = useSelector(state => state.userData);\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    var months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'agu', 'sep', 'oct', 'nov', 'dec'];\n    var day = dobDate.getDate();\n    var year = dobDate.getFullYear();\n    var month = months[dobDate.getMonth()];\n    const fullDate = `${day}/${month}/${year}`;\n    const isFormValid = formValidation(signUpState);\n    const inputValue = formInputData(signUpState);\n    const newObj = { ...inputValue,\n      \"dateOfBirth\": fullDate\n    };\n\n    if (isFormValid) {\n      const objectLenght = Object.keys(mapState.userSignUpData).length;\n      const checkArry = objectLenght > 0 ? _.map(mapState.userSignUpData, (val, key) => {\n        return val;\n      }) : (dispatch(fun.initialSignUp(newObj)), alert(\"Account Created Successfully ! You Can Login\"));\n      const xyz = objectLenght > 0 && checkArry.filter(val => {\n        if (val.email === newObj.email) {\n          return val;\n        }\n      });\n\n      if (objectLenght !== 0) {\n        if (xyz.length !== 0) {\n          alert(\"This email is already registred ! Please try another \");\n        } else {\n          dispatch(fun.initialSignUp(newObj));\n          alert(\"Account Created Successfully ! You Can Login\"); // return(props.history.push('/login'))\n          // return  <Redirect to='/login'></Redirect>\n        }\n      } // window.location.reload();\n\n    } else {\n      setShouldValidateInputs(!isFormValid);\n    }\n  };\n\n  const passwordValue = signUpState.password && signUpState.password.value;\n  return /*#__PURE__*/React.createElement(styl.ManForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(styl.ManFormSec, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(styl.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, props.check, \"SignUp\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form\",\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    required: true,\n    label: \"First Name\",\n    name: \"first_name\",\n    placeholder: \"First Name\",\n    onChange: fieldHandle,\n    value: signUpState.first_name,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    required: true,\n    label: \"Last Name\",\n    name: \"last_name\",\n    placeholder: \"Last Name\",\n    onChange: fieldHandle,\n    value: signUpState.last_name,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isEmail\",\n    required: true,\n    label: \"Email\",\n    name: \"email\",\n    placeholder: \"Example@gmail.com\",\n    onChange: fieldHandle,\n    value: signUpState.email,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field datefield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, \"Date of Birth\"), /*#__PURE__*/React.createElement(DatePicker, {\n    required: true,\n    selected: dobDate,\n    onChange: DobFun,\n    placeholderText: \"mm/dd/yyyy\",\n    dateFormat: \"MM/dd/yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    minLength: 8,\n    minLengthErrMsg: \"Short passwords are easy to guess. Try one with atleast 8 characters\",\n    required: true,\n    type: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    placeholder: \"********\",\n    onChange: fieldHandle,\n    value: signUpState.password,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"equals\",\n    comparison: passwordValue,\n    validatorErrMsg: \"These passwords don't match. Try again?\",\n    required: true,\n    type: \"password\",\n    label: \"Confirm Password\",\n    name: \"confirm_password\",\n    placeholder: \"********\",\n    onChange: fieldHandle,\n    value: signUpState.confirm_password,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(styl.Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"positive ui button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, \"SignUp\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"clickableBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, \"Click here to SignIn!\")))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/lenovo-hoolime1/Desktop/sonu 22-01-2020/React Redux Projects without npm/ledger_book/src/component/signup/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","DatePicker","_","Redirect","Link","Field","formInputData","formValidation","styl","fun","Login","SignUp","props","signUpState","setSignUpState","shouldValidateInputs","setShouldValidateInputs","fieldHandle","event","inputValue","inputName","validationState","isRequired","value","target","validation","dobDate","setDobDate","DobFun","date","dispatch","displayDataInitial","mapState","state","userData","submitForm","e","preventDefault","months","day","getDate","year","getFullYear","month","getMonth","fullDate","isFormValid","newObj","objectLenght","Object","keys","userSignUpData","length","checkArry","map","val","key","initialSignUp","alert","xyz","filter","email","passwordValue","password","check","first_name","last_name","confirm_password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAUC,QAAV,EAAmBC,IAAnB,QAA+B,kBAA/B;AAEA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,cAA/B,QAAqD,yBAArD;AAEA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAGzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,oBAAD,EAAuBC,uBAAvB,IAAkDnB,QAAQ,CAAC,EAAD,CAAhE;;AAEA,QAAMoB,WAAW,GAAG,CAACC,KAAD,EAAQC,UAAR,EAAoBC,SAApB,EAA+BC,eAA/B,EAAgDC,UAAhD,KAA+D;AAClF,UAAMC,KAAK,GAAIL,KAAK,IAAIA,KAAK,CAACM,MAAN,CAAaD,KAAvB,IAAiCJ,UAA/C;AACAN,IAAAA,WAAW,CAACO,SAAD,CAAX,GAAyB;AAAEG,MAAAA,KAAF;AAASE,MAAAA,UAAU,EAAEJ,eAArB;AAAsCC,MAAAA;AAAtC,KAAzB;AACAR,IAAAA,cAAc,CAAC,EAAC,GAAGD;AAAJ,KAAD,CAAd;AAEA,GALD;;AAOA,QAAM,CAAEa,OAAF,EAAWC,UAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAM+B,MAAM,GAAGC,IAAI,IAAI;AACtBF,IAAAA,UAAU,CAACE,IAAD,CAAV;AACA,GAFD;;AAIA/B,EAAAA,SAAS,CAAC,MAAI;AACbgC,IAAAA,QAAQ,CAACrB,GAAG,CAACsB,kBAAJ,EAAD,CAAR;AAEA,GAHQ,EAGN,EAHM,CAAT;AAMG,QAAMC,QAAQ,GAAGjC,WAAW,CAACkC,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACH,QAAMJ,QAAQ,GAAG9B,WAAW,EAA5B;;AAKA,QAAMmC,UAAU,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAb;AACA,QAAIC,GAAG,GAAGb,OAAO,CAACc,OAAR,EAAV;AACA,QAAIC,IAAI,GAAGf,OAAO,CAACgB,WAAR,EAAX;AACA,QAAIC,KAAK,GAAGL,MAAM,CAACZ,OAAO,CAACkB,QAAR,EAAD,CAAlB;AACA,UAAMC,QAAQ,GAAI,GAAEN,GAAI,IAAGI,KAAM,IAAGF,IAAK,EAAzC;AAEA,UAAMK,WAAW,GAAGvC,cAAc,CAACM,WAAD,CAAlC;AACA,UAAMM,UAAU,GAAGb,aAAa,CAACO,WAAD,CAAhC;AACA,UAAMkC,MAAM,GAAG,EAAC,GAAG5B,UAAJ;AAAgB,qBAAe0B;AAA/B,KAAf;;AAEA,QAAIC,WAAJ,EAAiB;AAEhB,YAAME,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYlB,QAAQ,CAACmB,cAArB,EAAqCC,MAA1D;AACA,YAAMC,SAAS,GAAGL,YAAY,GAAG,CAAf,GAAmB9C,CAAC,CAACoD,GAAF,CAAMtB,QAAQ,CAACmB,cAAf,EAA+B,CAACI,GAAD,EAAMC,GAAN,KAAc;AACjF,eAAOD,GAAP;AACA,OAFoC,CAAnB,IAEZzB,QAAQ,CAACrB,GAAG,CAACgD,aAAJ,CAAkBV,MAAlB,CAAD,CAAR,EAAqCW,KAAK,CAAC,8CAAD,CAF9B,CAAlB;AAIA,YAAMC,GAAG,GAAGX,YAAY,GAAG,CAAf,IAAoBK,SAAS,CAACO,MAAV,CAAkBL,GAAD,IAAS;AACzD,YAAGA,GAAG,CAACM,KAAJ,KAAcd,MAAM,CAACc,KAAxB,EAA8B;AAC7B,iBAAON,GAAP;AACA;AACD,OAJ+B,CAAhC;;AAMA,UAAGP,YAAY,KAAK,CAApB,EAAsB;AACrB,YAAGW,GAAG,CAACP,MAAJ,KAAe,CAAlB,EAAoB;AACnBM,UAAAA,KAAK,CAAC,uDAAD,CAAL;AACA,SAFD,MAEO;AACN5B,UAAAA,QAAQ,CAACrB,GAAG,CAACgD,aAAJ,CAAkBV,MAAlB,CAAD,CAAR;AACAW,UAAAA,KAAK,CAAC,8CAAD,CAAL,CAFM,CAGN;AACA;AAEA;AACD,OAvBe,CAyBhB;;AACA,KA1BD,MA0BO;AACN1C,MAAAA,uBAAuB,CAAC,CAAC8B,WAAF,CAAvB;AACA;AACD,GAzCD;;AA6CA,QAAMgB,aAAa,GAAGjD,WAAW,CAACkD,QAAZ,IAAwBlD,WAAW,CAACkD,QAAZ,CAAqBxC,KAAnE;AACG,sBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJX,KAAK,CAACoD,KADF,WADF,eAKE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,QAAQ,EAAE7B,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAC,gBADX;AAEC,IAAA,QAAQ,MAFT;AAGC,IAAA,KAAK,EAAC,YAHP;AAIC,IAAA,IAAI,EAAC,YAJN;AAKC,IAAA,WAAW,EAAC,YALb;AAMC,IAAA,QAAQ,EAAElB,WANX;AAOC,IAAA,KAAK,EAAEJ,WAAW,CAACoD,UAPpB;AAQC,IAAA,oBAAoB,EAAElD,oBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADO,eAaP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAC,gBADX;AAEC,IAAA,QAAQ,MAFT;AAGC,IAAA,KAAK,EAAC,WAHP;AAIC,IAAA,IAAI,EAAC,WAJN;AAKC,IAAA,WAAW,EAAC,WALb;AAMC,IAAA,QAAQ,EAAEE,WANX;AAOC,IAAA,KAAK,EAAEJ,WAAW,CAACqD,SAPpB;AAQC,IAAA,oBAAoB,EAAEnD,oBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAbO,eAyBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAC,SADX;AAEC,IAAA,QAAQ,MAFT;AAGC,IAAA,KAAK,EAAC,OAHP;AAIC,IAAA,IAAI,EAAC,OAJN;AAKC,IAAA,WAAW,EAAC,mBALb;AAMC,IAAA,QAAQ,EAAEE,WANX;AAOC,IAAA,KAAK,EAAEJ,WAAW,CAACgD,KAPpB;AAQC,IAAA,oBAAoB,EAAE9C,oBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAzBO,eAqCP;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC,oBAAC,UAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,QAAQ,EAAIW,OAFb;AAGC,IAAA,QAAQ,EAAGE,MAHZ;AAIC,IAAA,eAAe,EAAG,YAJnB;AAKC,IAAA,UAAU,EAAG,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CArCO,eA+CP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAC,gBADX;AAC4B,IAAA,SAAS,EAAE,CADvC;AAEC,IAAA,eAAe,EAAC,sEAFjB;AAGC,IAAA,QAAQ,MAHT;AAIC,IAAA,IAAI,EAAC,UAJN;AAKC,IAAA,KAAK,EAAC,UALP;AAMC,IAAA,IAAI,EAAC,UANN;AAOC,IAAA,WAAW,EAAC,UAPb;AAQC,IAAA,QAAQ,EAAEX,WARX;AASC,IAAA,KAAK,EAAEJ,WAAW,CAACkD,QATpB;AAUC,IAAA,oBAAoB,EAAEhD,oBAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CA/CO,eA6DP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAC,QADX;AAEC,IAAA,UAAU,EAAE+C,aAFb;AAGC,IAAA,eAAe,EAAC,yCAHjB;AAIC,IAAA,QAAQ,MAJT;AAKC,IAAA,IAAI,EAAC,UALN;AAMC,IAAA,KAAK,EAAC,kBANP;AAOC,IAAA,IAAI,EAAC,kBAPN;AAQC,IAAA,WAAW,EAAC,UARb;AASC,IAAA,QAAQ,EAAE7C,WATX;AAUC,IAAA,KAAK,EAAEJ,WAAW,CAACsD,gBAVpB;AAWC,IAAA,oBAAoB,EAAEpD,oBAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CA7DO,eA4EP,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,SAAS,EAAC,oBADX;AAEC,IAAA,IAAI,EAAC,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CA5EO,eAoFP;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,CApFO,CALF,CADF,CADF;AAkGH,CA9KD;;AAgLA,eAAeJ,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash';\nimport  { Redirect,Link } from 'react-router-dom'\n\nimport { Field, formInputData, formValidation } from 'reactjs-input-validator';\n\nimport * as styl from '../../style'\nimport './style.css';\nimport * as fun from '../../redux/actions/index'\nimport Login from '../login';\n\n\nconst SignUp = (props) => {\n\n\n\tconst [signUpState, setSignUpState] = useState({});\n\tconst [shouldValidateInputs, setShouldValidateInputs] = useState('')\n\n\tconst fieldHandle = (event, inputValue, inputName, validationState, isRequired) => {\n\t\tconst value = (event && event.target.value) || inputValue;\n\t\tsignUpState[inputName] = { value, validation: validationState, isRequired };\n\t\tsetSignUpState({...signUpState})\n\n\t}\n\t\t\n\tconst [ dobDate, setDobDate ] = useState('')\n\tconst DobFun = date => {\n\t\tsetDobDate(date)\n\t};\n\n\tuseEffect(()=>{\n\t\tdispatch(fun.displayDataInitial())\n\n\t}, [])\n\n\t\n    const mapState = useSelector(state => state.userData);\n\tconst dispatch = useDispatch();\n\t\n\t\n\n\n\tconst submitForm = (e) => {\n\t\te.preventDefault();\n\t\tvar months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'agu', 'sep', 'oct', 'nov', 'dec'];\n\t\tvar day = dobDate.getDate();\n\t\tvar year = dobDate.getFullYear();\n\t\tvar month = months[dobDate.getMonth()];\n\t\tconst fullDate = `${day}/${month}/${year}`;\n\n\t\tconst isFormValid = formValidation(signUpState);\n\t\tconst inputValue = formInputData(signUpState)\n\t\tconst newObj = {...inputValue, \"dateOfBirth\": fullDate}\n\t\t\n\t\tif (isFormValid) {\n\n\t\t\tconst objectLenght = Object.keys(mapState.userSignUpData).length; \n\t\t\tconst checkArry = objectLenght > 0 ? _.map(mapState.userSignUpData, (val, key) => {\n\t\t\t\treturn val\n\t\t\t}) : (dispatch(fun.initialSignUp(newObj)), alert(\"Account Created Successfully ! You Can Login\"))\n\n\t\t\tconst xyz = objectLenght > 0 && checkArry.filter((val) => {\n\t\t\t\tif(val.email === newObj.email){\n\t\t\t\t\treturn val\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tif(objectLenght !== 0){\n\t\t\t\tif(xyz.length !== 0){\n\t\t\t\t\talert(\"This email is already registred ! Please try another \")\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(fun.initialSignUp(newObj))\n\t\t\t\t\talert(\"Account Created Successfully ! You Can Login\")\n\t\t\t\t\t// return(props.history.push('/login'))\n\t\t\t\t\t// return  <Redirect to='/login'></Redirect>\n\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// window.location.reload();\n\t\t} else {\n\t\t\tsetShouldValidateInputs(!isFormValid)\n\t\t}\n\t}\n\t\n\n\n\tconst passwordValue = signUpState.password && signUpState.password.value;\n    return(\n      <styl.ManForm>\n        <styl.ManFormSec>\n          <styl.Header>\n\t\t\t  {props.check}\n            SignUp\n          </styl.Header>\n          <form className=\"ui form\" onSubmit={submitForm}>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tvalidator=\"isAlphanumeric\"\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"First Name\"\n\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\tvalue={signUpState.first_name}\n\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tvalidator=\"isAlphanumeric\"\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Last Name\"\n\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\tvalue={signUpState.last_name}\n\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tvalidator=\"isEmail\"\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tplaceholder=\"Example@gmail.com\"\n\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\tvalue={signUpState.email}\n\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"field datefield\">\n\t\t\t\t<label>Date of Birth</label>\n\t\t\t\t<DatePicker\n\t\t\t\t\trequired\n\t\t\t\t\tselected= { dobDate }\n\t\t\t\t\tonChange={ DobFun }\n\t\t\t\t\tplaceholderText = \"mm/dd/yyyy\"\n\t\t\t\t\tdateFormat = \"MM/dd/yyyy\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tvalidator=\"isAlphanumeric\" minLength={8}\n\t\t\t\t\tminLengthErrMsg=\"Short passwords are easy to guess. Try one with atleast 8 characters\"\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tplaceholder=\"********\"\n\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\tvalue={signUpState.password}\n\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tvalidator=\"equals\"\n\t\t\t\t\tcomparison={passwordValue}\n\t\t\t\t\tvalidatorErrMsg=\"These passwords don't match. Try again?\"\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\tplaceholder=\"********\"\n\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\tvalue={signUpState.confirm_password}\n\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<styl.Button>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"positive ui button\" \n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSignUp\n\t\t\t\t</button>\n\t\t\t</styl.Button>\n\t\t\t<p className=\"clickableBtn\">\n\t\t\t\t<Link to=\"/login\">Click here to SignIn!</Link>\n\t\t\t</p>\n          </form>\n        </styl.ManFormSec>\n      </styl.ManForm>\n    )\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}