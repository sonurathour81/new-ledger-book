{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-hoolime1/Desktop/sonu 22-01-2020/React Redux Projects without npm/xyz/src/component/userAddItems/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as fun from '../../redux/actions/index';\nimport * as stylCls from './style';\nimport { toast } from 'react-toastify';\nexport const UserAddItems = () => {\n  const mapState = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [clickedUserData, setClickedUserData] = useState({});\n  useEffect(() => {\n    dispatch(fun.displayDataInitial());\n    setClickedUserData(JSON.parse(localStorage.getItem(\"Clicked_User_Data\")) || []);\n  }, []);\n  const initial = {\n    price_unit: '',\n    price: '',\n    qty_unit: '',\n    quantity: '',\n    product_name: ''\n  };\n  const [item, setItem] = useState(initial);\n\n  const fieldHandle = e => {\n    e.preventDefault();\n    setItem({ ...item,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const checkFun = () => {\n    const {\n      price_unit,\n      price,\n      qty_unit,\n      quantity\n    } = item;\n\n    if (price_unit === 'PIECE') {\n      return (price * quantity).toFixed(2);\n    } else if (price_unit === 'KG') {\n      if (qty_unit === 'KG') {\n        return (price * quantity).toFixed(2);\n      } else if (qty_unit === 'GM') {\n        const oneGm = price / 1000;\n        return (oneGm * quantity).toFixed(2);\n      }\n    }\n  };\n\n  const addItem = e => {\n    e.preventDefault();\n    const temp = { ...item,\n      amountOfProduct: checkFun(),\n      customerId: clickedUserData.customerId\n    };\n    dispatch(fun.addItemFun(temp));\n    toast.success(\"Item Add Successfully!\");\n    setItem({\n      price_unit: '',\n      price: '',\n      qty_unit: '',\n      quantity: '',\n      product_name: ''\n    });\n  };\n\n  const deleteItem = (e, indx) => {\n    e.preventDefault();\n    dispatch(fun.deleteItemFun(indx));\n    toast.success(\"Item Deleted Successfully!\");\n  };\n\n  const [grandTotal, setGrandTotal] = useState(0);\n  let gdAmount = 0;\n  const itemOfClickedCustomer = mapState.customerItems.item && mapState.customerItems.item.filter((val, idx) => {\n    if (val.customerId === clickedUserData.customerId) {\n      const temp = parseFloat(gdAmount) + parseFloat(val.amountOfProduct);\n      gdAmount = temp.toFixed(2);\n      return val;\n    }\n  });\n  useEffect(() => {\n    setGrandTotal(gdAmount);\n  }, [gdAmount]);\n\n  const submitItems = () => {\n    const temp = {\n      customerId: clickedUserData.customerId,\n      totalItems: [{\n        allItem: [...itemOfClickedCustomer],\n        createdTime: Date.now()\n      }]\n    };\n    dispatch(fun.addItemsInitial(temp));\n    toast.success(\"All items added successfully!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.MainDiv2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form\",\n    onSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.MainDivInput, {\n    className: \"two wide field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Unit of Price\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"ui fluid search dropdown\",\n    name: \"price_unit\",\n    required: true,\n    value: item.price_unit,\n    onChange: fieldHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"KG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"Kilogram(KG)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PIECE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"Piece\"))), /*#__PURE__*/React.createElement(stylCls.MainDivInput, {\n    className: \"two wide field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, item.price_unit === 'KG' && \"Price / Kg\", item.price_unit === 'PIECE' && \"Price / Piece\", item.price_unit === '' && \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    name: \"price\",\n    placeholder: \"510\",\n    value: item.price,\n    onChange: fieldHandle,\n    pattern: \"\\\\d*\",\n    maxLength: 4,\n    minLength: 1,\n    title: \"Use Minimum 1 Digit or Maximum 4 Digits\",\n    disabled: item.price_unit === '' && true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.MainDivInput, {\n    className: \"two wide field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, \"Unit of Quantity\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"ui fluid search dropdown\",\n    name: \"qty_unit\",\n    required: true,\n    value: item.qty_unit,\n    onChange: fieldHandle,\n    disabled: item.price_unit === '' && true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"Select\"), item.price_unit === 'KG' ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"KG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, \"Kilogram(KG)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, \"Gram(GM)\")) : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PIECE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 39\n    }\n  }, \"Pieces\"))), /*#__PURE__*/React.createElement(stylCls.MainDivInput, {\n    className: \"two wide field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    name: \"quantity\",\n    maxlength: \"3\",\n    placeholder: \"231\",\n    value: item.quantity,\n    onChange: fieldHandle,\n    pattern: \"\\\\d*\",\n    maxLength: 3,\n    minLength: 1,\n    title: \"Use Minimum 1 Digit or Maximum 3 Digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.MainDivInput, {\n    className: \"five wide field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, \"Product Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    name: \"product_name\",\n    placeholder: \"Biscuit 50-50\",\n    value: item.product_name,\n    onChange: fieldHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.MianDivButton, {\n    className: \"three wide field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"ui green button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, \"Add Item\"))))), /*#__PURE__*/React.createElement(stylCls.CustTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"Added Items \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, itemOfClickedCustomer.length)), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"ui green table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Sr. No.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, \"Unit of Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, \"Product Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"Amount / Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, itemOfClickedCustomer && itemOfClickedCustomer.map((val, idx) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 41\n      }\n    }, Number(idx) + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, val.price, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"rupee sign icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 56\n      }\n    }), \"/ \", val.price_unit), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, val.product_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }\n    }, val.quantity, \" \", val.qty_unit), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 41\n      }\n    }, val.amountOfProduct, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"rupee sign icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 66\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"iconsManDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => deleteItem(e, idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"trash alternate outline icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 53\n      }\n    })))));\n  }), itemOfClickedCustomer.length > 0 && /*#__PURE__*/React.createElement(stylCls.TotalTr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, \"Grand Total \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, grandTotal, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"rupee sign icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.MianDivButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"ui green button\",\n    onClick: submitItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }, \"Submit\"))))))));\n};","map":{"version":3,"sources":["/home/lenovo-hoolime1/Desktop/sonu 22-01-2020/React Redux Projects without npm/xyz/src/component/userAddItems/index.js"],"names":["React","useEffect","useState","useSelector","useDispatch","fun","stylCls","toast","UserAddItems","mapState","state","dispatch","clickedUserData","setClickedUserData","displayDataInitial","JSON","parse","localStorage","getItem","initial","price_unit","price","qty_unit","quantity","product_name","item","setItem","fieldHandle","e","preventDefault","target","name","value","checkFun","toFixed","oneGm","addItem","temp","amountOfProduct","customerId","addItemFun","success","deleteItem","indx","deleteItemFun","grandTotal","setGrandTotal","gdAmount","itemOfClickedCustomer","customerItems","filter","val","idx","parseFloat","submitItems","totalItems","allItem","createdTime","Date","now","addItemsInitial","length","map","Number"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as fun from '../../redux/actions/index'\nimport * as stylCls from './style'\nimport { toast } from 'react-toastify';\n\n\nexport const UserAddItems = () => {\n    const mapState = useSelector(state => state);\n    const dispatch = useDispatch();\n    \n\n    const [clickedUserData, setClickedUserData] = useState({})\n\tuseEffect(()=>{\n        dispatch(fun.displayDataInitial())\n        setClickedUserData(JSON.parse(localStorage.getItem(\"Clicked_User_Data\")) || [])\n    }, [])\n\n    const initial = {\n        price_unit:'',\n        price:'',\n        qty_unit:'',\n        quantity:'',\n        product_name:''\n    }\n    const [item,setItem] = useState(initial)\n    const fieldHandle = (e) => {\n        e.preventDefault();\n        setItem(\n            {...item,\n                [e.target.name] : e.target.value\n            }\n        )\n    }\n\n    const checkFun = () => {\n        const {price_unit,price,qty_unit,quantity} = item;\n        if(price_unit === 'PIECE'){\n            return (price*quantity).toFixed(2)\n        } else if(price_unit === 'KG'){\n            if(qty_unit === 'KG'){\n                return (price*quantity).toFixed(2)\n            } else if(qty_unit === 'GM'){\n                const oneGm = price / 1000;\n                return (oneGm*quantity).toFixed(2)\n            }\n        }\n    }\n\n    const addItem = (e) => {\n        e.preventDefault();\n        const temp = {...item,amountOfProduct:checkFun(), customerId:clickedUserData.customerId}\n        dispatch(fun.addItemFun(temp))\n        toast.success(\"Item Add Successfully!\");\n        setItem({\n            price_unit:'',\n            price:'',\n            qty_unit:'',\n            quantity:'',\n            product_name:''\n        })\n    }\n\n    const deleteItem = (e,indx) => {\n        e.preventDefault();\n        dispatch(fun.deleteItemFun(indx))\n        toast.success(\"Item Deleted Successfully!\");\n\n    }\n\n    const [grandTotal, setGrandTotal] = useState(0)\n    let gdAmount = 0;\n    const itemOfClickedCustomer = \n    mapState.customerItems.item && mapState.customerItems.item.filter((val,idx)=>{\n        if(val.customerId === clickedUserData.customerId){\n            const temp = parseFloat(gdAmount) + parseFloat(val.amountOfProduct)\n            gdAmount = temp.toFixed(2);\n            return val\n        }\n    })\n    \n    useEffect(()=>{\n        setGrandTotal(gdAmount)\n    },[gdAmount])\n    \n    const submitItems = () => {\n        const temp = { customerId:clickedUserData.customerId, totalItems : [{ allItem : [...itemOfClickedCustomer], createdTime: Date.now() }]}\n        dispatch(fun.addItemsInitial(temp))\n        toast.success(\"All items added successfully!\")\n    }\n    \n    return(\n        <div>\n            <stylCls.MainDiv2>\n                <form className=\"ui form\" onSubmit={addItem}>\n                    <div className=\"fields\">\n                        <stylCls.MainDivInput className=\"two wide field\">\n                            <label>Unit of Price</label>   \n                            <select \n                                className=\"ui fluid search dropdown\" \n                                name=\"price_unit\"\n                                required\n                                value={item.price_unit}\n                                onChange={fieldHandle}\n                            >\n                                <option value=\"\">Select</option>\n                                <option value=\"KG\">Kilogram(KG)</option>\n                                <option value=\"PIECE\">Piece</option>\n                            </select>\n                        </stylCls.MainDivInput>\n                        <stylCls.MainDivInput className=\"two wide field\">\n                            \n                            <label>\n                                {item.price_unit === 'KG' && \"Price / Kg\"}\n                                {item.price_unit === 'PIECE' && \"Price / Piece\"}\n                                {item.price_unit === '' && \"Price\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                required\n                                name=\"price\"\n                                placeholder=\"510\"\n                                value={item.price}\n                                onChange={fieldHandle}\n                                pattern=\"\\d*\"\n                                maxLength={4}\n                                minLength={1}\n                                title=\"Use Minimum 1 Digit or Maximum 4 Digits\"\n                                disabled = {item.price_unit === '' && true}\n                            />\n                        </stylCls.MainDivInput>\n                        <stylCls.MainDivInput className=\"two wide field\">\n                            <label>Unit of Quantity</label>   \n                            <select \n                                className=\"ui fluid search dropdown\" \n                                name=\"qty_unit\"\n                                required\n                                value={item.qty_unit}\n                                onChange={fieldHandle}\n                                disabled = {item.price_unit === '' && true}\n                            >\n                                <option value=\"\">Select</option>\n                                {item.price_unit === 'KG' ? \n                                    <React.Fragment>\n                                        <option value=\"KG\">Kilogram(KG)</option>\n                                        <option value=\"GM\">Gram(GM)</option>\n                                    </React.Fragment>\n                                    : <option value=\"PIECE\">Pieces</option>\n                                }\n                            </select>\n                        </stylCls.MainDivInput>\n                        <stylCls.MainDivInput className=\"two wide field\">\n                            <label>Quantity</label>\n                            <input \n                                type=\"text\"\n                                required\n                                name=\"quantity\"\n                                maxlength=\"3\"\n                                placeholder=\"231\"\n                                value={item.quantity}\n                                onChange={fieldHandle}\n                                pattern=\"\\d*\"\n                                maxLength={3}\n                                minLength={1}\n                                title=\"Use Minimum 1 Digit or Maximum 3 Digits\"\n                            />\n                        </stylCls.MainDivInput>\n                        <stylCls.MainDivInput className=\"five wide field\">\n                            <label>Product Name</label>\n                            <input \n                                type=\"text\"\n                                required\n                                name=\"product_name\"\n                                placeholder=\"Biscuit 50-50\"\n                                value={item.product_name}\n                                onChange={fieldHandle}\n                            />\n                        </stylCls.MainDivInput>\n                        <stylCls.MianDivButton className=\"three wide field\">\n                            <button class=\"ui green button\">Add Item</button>\n                        </stylCls.MianDivButton> \n                    </div>\n                </form>\n            </stylCls.MainDiv2>\n            <stylCls.CustTable>                    \n                <div>\n                    Added Items <span>{itemOfClickedCustomer.length}</span>\n                </div>\n                <table className=\"ui green table\">\n                    <thead>\n                        <tr>\n                            <th>Sr. No.</th>\n                            <th>Unit of Price</th>\n                            <th>Product Name</th>\n                            <th>Quantity</th>\n                            <th>Amount / Product</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {\n                            itemOfClickedCustomer && itemOfClickedCustomer.map((val,idx)=>{\n                                return(\n                                    <tr key={idx}>\n                                        <td>{Number(idx)+1}</td>\n                                        <td>{val.price}<i class=\"rupee sign icon\"></i>/ {val.price_unit}</td>\n                                        <td>{val.product_name}</td>\n                                        <td>{val.quantity} {val.qty_unit}</td>\n                                        <td>{val.amountOfProduct}<i class=\"rupee sign icon\"></i></td>\n                                        <td>\n                                            <div className=\"iconsManDiv\">\n                                                <div onClick={(e)=>deleteItem(e,idx)}>\n                                                    <i className=\"trash alternate outline icon\"></i>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )                \n                            })\n                        }\n                        {\n                            itemOfClickedCustomer.length > 0 &&\n                            <stylCls.TotalTr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td>Grand Total </td>\n                                <td>{grandTotal}<i class=\"rupee sign icon\"></i></td>\n                                <td>\n                                <stylCls.MianDivButton>\n                                    <button class=\"ui green button\" onClick = {submitItems}>Submit</button>\n                                </stylCls.MianDivButton> \n                                </td>\n                            </stylCls.TotalTr>\n                        }\n                    </tbody>\n                </table>\n            </stylCls.CustTable>\n        </div>\n    )\n  }"]},"metadata":{},"sourceType":"module"}