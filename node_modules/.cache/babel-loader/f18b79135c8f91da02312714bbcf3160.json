{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-hoolime1/Desktop/sonu 22-01-2020/React Redux Projects without npm/ledger_book/src/component/signup/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Field, formInputData, formValidation } from 'reactjs-input-validator';\nimport * as styl from '../../style';\nimport * as stylCls from './style';\nimport './style.css';\nimport * as fun from '../../redux/actions/index';\nimport Login from '../login';\n\nconst SignUp = props => {\n  const [signUpState, setSignUpState] = useState({});\n  const [shouldValidateInputs, setShouldValidateInputs] = useState('');\n\n  const fieldHandle = (event, inputValue, inputName, validationState, isRequired) => {\n    const value = event && event.target.value || inputValue;\n    signUpState[inputName] = {\n      value,\n      validation: validationState,\n      isRequired\n    };\n    setSignUpState({ ...signUpState\n    });\n  };\n\n  const [storeType, setStoreType] = useState('');\n  useEffect(() => {\n    dispatch(fun.displayDataInitial());\n  }, []);\n  const mapState = useSelector(state => state.userData);\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    const isFormValid = formValidation(signUpState);\n    const inputValue = formInputData(signUpState);\n    const newObj = { ...inputValue,\n      \"storeType\": storeType\n    };\n\n    if (isFormValid) {\n      const objectLenght = Object.keys(mapState.userSignUpData).length;\n      const checkArry = objectLenght > 0 ? _.map(mapState.userSignUpData, (val, key) => {\n        return val;\n      }) : (dispatch(fun.initialSignUp(newObj)), alert(\"Account Created Successfully ! You Can Login\"));\n      const xyz = objectLenght > 0 && checkArry.filter(val => {\n        if (val.email === newObj.email) {\n          return val;\n        }\n      });\n\n      if (objectLenght !== 0) {\n        if (xyz.length !== 0) {\n          alert(\"This email is already registred ! Please try another \");\n        } else {\n          dispatch(fun.initialSignUp(newObj));\n          alert(\"Account Created Successfully ! You Can Login\"); // return(props.history.push('/login'))\n          // return  <Redirect to='/login'></Redirect>\n        }\n      } // window.location.reload();\n\n    } else {\n      setShouldValidateInputs(!isFormValid);\n    }\n  };\n\n  const passwordValue = signUpState.password && signUpState.password.value;\n  return /*#__PURE__*/React.createElement(styl.ManForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(styl.ManFormSec, {\n    className: \"withIncres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(styl.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"SignUp\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form\",\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    required: true,\n    label: \"First Name\",\n    name: \"first_name\",\n    placeholder: \"First Name\",\n    onChange: fieldHandle,\n    value: signUpState.first_name,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    required: true,\n    label: \"Last Name\",\n    name: \"last_name\",\n    placeholder: \"Last Name\",\n    onChange: fieldHandle,\n    value: signUpState.last_name,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    required: true,\n    label: \"Store Name\",\n    name: \"store_name\",\n    placeholder: \"Store Name\",\n    onChange: fieldHandle,\n    value: signUpState.store_name,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }\n  }, \"Type of Store\"), /*#__PURE__*/React.createElement(\"select\", {\n    class: \"ui dropdown\",\n    required: true,\n    name: \"store_type\",\n    onChange: e => setStoreType(e.target.value),\n    value: storeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Select Type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kirana\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Kirana Store\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"electronic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"Electronic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hotel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Hotel\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bicycle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Bicycle\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isEmail\",\n    required: true,\n    label: \"Email\",\n    name: \"email\",\n    placeholder: \"Example@yopmail.com\",\n    onChange: fieldHandle,\n    value: signUpState.email,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    maxLength: 10,\n    minLength: 10,\n    validator: \"isNumeric\",\n    required: true,\n    placeholder: \"Phone Number\",\n    label: \"Phone Number\",\n    name: \"phone\",\n    onChange: fieldHandle,\n    value: signUpState.phone,\n    shouldValidateInputs: shouldValidateInputs,\n    minLengthErrMsg: \"Invalid Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"isAlphanumeric\",\n    minLength: 8,\n    minLengthErrMsg: \"Short passwords are easy to guess. Try one with atleast 8 characters\",\n    required: true,\n    type: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    placeholder: \"********\",\n    onChange: fieldHandle,\n    value: signUpState.password,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(stylCls.CustmFormField, {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validator: \"equals\",\n    comparison: passwordValue,\n    validatorErrMsg: \"These passwords don't match. Try again?\",\n    required: true,\n    type: \"password\",\n    label: \"Confirm Password\",\n    name: \"confirm_password\",\n    placeholder: \"********\",\n    onChange: fieldHandle,\n    value: signUpState.confirm_password,\n    shouldValidateInputs: shouldValidateInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(stylCls.CustmButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"positive ui button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, \"SignUp\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"clickableBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, \"Click here to SignIn!\")))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/lenovo-hoolime1/Desktop/sonu 22-01-2020/React Redux Projects without npm/ledger_book/src/component/signup/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","DatePicker","_","Redirect","Link","Field","formInputData","formValidation","styl","stylCls","fun","Login","SignUp","props","signUpState","setSignUpState","shouldValidateInputs","setShouldValidateInputs","fieldHandle","event","inputValue","inputName","validationState","isRequired","value","target","validation","storeType","setStoreType","dispatch","displayDataInitial","mapState","state","userData","submitForm","e","preventDefault","isFormValid","newObj","objectLenght","Object","keys","userSignUpData","length","checkArry","map","val","key","initialSignUp","alert","xyz","filter","email","passwordValue","password","first_name","last_name","store_name","phone","confirm_password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash';\nimport  { Redirect,Link } from 'react-router-dom'\n\nimport { Field, formInputData, formValidation } from 'reactjs-input-validator';\n\nimport * as styl from '../../style'\nimport * as stylCls from './style'\n\nimport './style.css';\nimport * as fun from '../../redux/actions/index'\nimport Login from '../login';\n\n\nconst SignUp = (props) => {\n\n\n\tconst [signUpState, setSignUpState] = useState({});\n\tconst [shouldValidateInputs, setShouldValidateInputs] = useState('')\n\n\tconst fieldHandle = (event, inputValue, inputName, validationState, isRequired) => {\n\t\tconst value = (event && event.target.value) || inputValue;\n\t\tsignUpState[inputName] = { value, validation: validationState, isRequired };\n\t\tsetSignUpState({...signUpState})\n\n\t}\n\tconst [storeType, setStoreType] = useState('')\n\n\tuseEffect(()=>{\n\t\tdispatch(fun.displayDataInitial())\n\n\t}, [])\n\n\t\n    const mapState = useSelector(state => state.userData);\n\tconst dispatch = useDispatch();\n\t\n\t\n\n\n\tconst submitForm = (e) => {\n\t\te.preventDefault();\n\t\tconst isFormValid = formValidation(signUpState);\n\t\tconst inputValue = formInputData(signUpState)\n\t\tconst newObj = {...inputValue, \"storeType\": storeType}\n\t\t\n\t\tif (isFormValid) {\n\n\t\t\tconst objectLenght = Object.keys(mapState.userSignUpData).length; \n\t\t\tconst checkArry = objectLenght > 0 ? _.map(mapState.userSignUpData, (val, key) => {\n\t\t\t\treturn val\n\t\t\t}) : (dispatch(fun.initialSignUp(newObj)), alert(\"Account Created Successfully ! You Can Login\"))\n\n\t\t\tconst xyz = objectLenght > 0 && checkArry.filter((val) => {\n\t\t\t\tif(val.email === newObj.email){\n\t\t\t\t\treturn val\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tif(objectLenght !== 0){\n\t\t\t\tif(xyz.length !== 0){\n\t\t\t\t\talert(\"This email is already registred ! Please try another \")\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(fun.initialSignUp(newObj))\n\t\t\t\t\talert(\"Account Created Successfully ! You Can Login\")\n\t\t\t\t\t// return(props.history.push('/login'))\n\t\t\t\t\t// return  <Redirect to='/login'></Redirect>\n\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// window.location.reload();\n\t\t} else {\n\t\t\tsetShouldValidateInputs(!isFormValid)\n\t\t}\n\t}\n\t\n\t\n\n\tconst passwordValue = signUpState.password && signUpState.password.value;\n    return(\n      <styl.ManForm>\n        <styl.ManFormSec className=\"withIncres\">\n          <styl.Header>\n            SignUp\n          </styl.Header>\n          <form className=\"ui form\" onSubmit={submitForm}>\n\t\t\t<div className=\"two fields\">\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tvalidator=\"isAlphanumeric\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"First Name\"\n\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.first_name}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tvalidator=\"isAlphanumeric\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"Last Name\"\n\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.last_name}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t</div>\n\t\t\t<div className=\"two fields\">\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tvalidator=\"isAlphanumeric\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"Store Name\"\n\t\t\t\t\t\tname=\"store_name\"\n\t\t\t\t\t\tplaceholder=\"Store Name\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.store_name}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<label>Type of Store</label>\n\t\t\t\t\t<select \n\t\t\t\t\t\tclass=\"ui dropdown\" \n\t\t\t\t\t\trequired\n\t\t\t\t\t\tname=\"store_type\"\n\t\t\t\t\t\tonChange={(e) => setStoreType(e.target.value)}\n\t\t\t\t\t\tvalue={storeType}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select Type</option>\n\t\t\t\t\t\t<option value=\"kirana\">Kirana Store</option>\n\t\t\t\t\t\t<option value=\"electronic\">Electronic</option>\n\t\t\t\t\t\t<option value=\"hotel\">Hotel</option>\n\t\t\t\t\t\t<option value=\"bicycle\">Bicycle</option>\n\t\t\t\t\t</select>\n\t\t\t\t</stylCls.CustmFormField>             \n\t\t\t</div>\n\t\t\t<div className=\"two fields\">\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tvalidator=\"isEmail\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tplaceholder=\"Example@yopmail.com\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.email}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tmaxLength={10}\n\t\t\t\t\t\tminLength={10}\n\t\t\t\t\t\tvalidator=\"isNumeric\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder=\"Phone Number\"\n\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.phone}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t\tminLengthErrMsg=\"Invalid Phone\"\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t</div>\t\n\t\t\t<div className=\"two fields\">\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tvalidator=\"isAlphanumeric\" minLength={8}\n\t\t\t\t\t\tminLengthErrMsg=\"Short passwords are easy to guess. Try one with atleast 8 characters\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"********\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.password}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t\t<stylCls.CustmFormField className=\"field\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tvalidator=\"equals\"\n\t\t\t\t\t\tcomparison={passwordValue}\n\t\t\t\t\t\tvalidatorErrMsg=\"These passwords don't match. Try again?\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\tplaceholder=\"********\"\n\t\t\t\t\t\tonChange={fieldHandle}\n\t\t\t\t\t\tvalue={signUpState.confirm_password}\n\t\t\t\t\t\tshouldValidateInputs={shouldValidateInputs}\n\t\t\t\t\t/>\n\t\t\t\t</stylCls.CustmFormField>\n\t\t\t</div>\n\t\t\t<stylCls.CustmButton>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"positive ui button\" \n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSignUp\n\t\t\t\t</button>\n\t\t\t</stylCls.CustmButton>\n\t\t\t<p className=\"clickableBtn\">\n\t\t\t\t<Link to=\"/login\">Click here to SignIn!</Link>\n\t\t\t</p>\n          </form>\n        </styl.ManFormSec>\n      </styl.ManForm>\n    )\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}